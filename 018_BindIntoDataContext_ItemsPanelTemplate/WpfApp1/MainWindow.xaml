<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="MainWindow" Height="Auto" Width="Auto"
        Name="Root">
    <Window.DataContext>
        <local:ViewModel />
    </Window.DataContext>

    <Grid Background="#33990000" Name="MainGrid">
        <ItemsControl Width="Auto" Height="Auto">
            <ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <!-- このBorderのThicknessに、ViewModelのプロパティをバインドする -->

                    <!-- OKな書き方①：自分の親をたどりGridまで行ったらそのDataContext(=VM)のプロパティを見る -->
                    <Border BorderBrush="Green"
                            BorderThickness="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.MyThickness}">

                    <!-- OKな書き方②：一番上の親(Window)のDataContext(VM)の中のプロパティにバインドする -->
                    <!--<Border BorderBrush="Green"
                        BorderThickness="{Binding Path=DataContext.MyThickness, ElementName=Root}">-->

                    <!-- OKな書き方③：DataContextにMyThicknessがあればそれをBinding、なければItemsControlの選択項目(自分に該当する項目)のMyThicknessをBinding -->
                    <!-- 今回の場合、DataContextにMyThicknessがあってItemsControlにないので、VMにバインドされてる -->
                    <!--<Border BorderBrush="Green"
                        BorderThickness="{Binding Path=MyThickness}">-->
                        
                    <!-- NGな書き方：Root=Windowで、その中のプロパティにバインド、とすると、VMのプロパティではなくコードビハインドにあるプロパティ、になってしまう。-->
                    <!-- 逆に、コードビハインドに書いたプロパティにバインドするのであれば、これでOK -->
                    <!--<Border BorderBrush="Green"
                        BorderThickness="{Binding Path=MyThickness, ElementName=Root}">-->
                    
                        <ItemsPresenter />
                    </Border>

                </ControlTemplate>
            </ItemsControl.Template>

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <!-- ここに、Gridを指定する。-->
                    <Canvas />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </Grid>
</Window>
